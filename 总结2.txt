    /**
     * 删除存储文件夹
     * @param string
     */
    public  void deleteFolder(string path)
    {
        //if (Directory.Exists(path))
        //{
        //    Directory.Delete(path, true);
        //}
    }

url重写
	  <rule name="WebToHTTPSs" enabled="true" stopProcessing="true">
			  <match url="(.*)" />
			  <conditions>
				  <add input="{HTTPS}" pattern="^OFF$" />
				  <add input="{REQUEST_URI}" pattern="^(?!.*?/sdadmin/).*$" />
				  <add input="{REQUEST_URI}" pattern="^(?!.*?/user/).*$" />
				  <add input="{REQUEST_URI}" pattern="^(?!.*?/ueditor1_3_5-utf8-net/).*$" />
				  <add input="{REQUEST_URI}" pattern="(?=.aspx)|(?=.htm)|^/$" />
				  <add input="{REQUEST_URI}" pattern="^(?!.*?/mobile/).*$" />
				  <!--<add input="{REQUEST_URI}" pattern="^brushcrown.com$" />-->

			  </conditions>
			  <action type="Redirect" url="https://www.brushcrown.com/{R:1}" redirectType="Permanent" />
		  </rule>
webconfig 屏蔽ip节点配置<漓源环保当数第一>
    <rule name="Block SomeRobot" stopProcessing="true">
            <match url="^folder1/folder2" />
            <conditions logicalGrouping="MatchAny">
                <add input="{USER_AGENT}" pattern="SomeRobot" />
                <add input="{REMOTE_ADDR}" pattern="171\.11\.139\.173" />
<add input="{REMOTE_ADDR}" pattern="223\.145\.229\.157" />
<add input="{REMOTE_ADDR}" pattern="183\.143\.46\.126" />
<add input="{REMOTE_ADDR}" pattern="117\.135\.127\.94" />
            </conditions>
            <action type="AbortRequest" />
        </rule>


常用301跳转
    <rewrite>
      <rules>
        <rule name="WWW Redirect" stopProcessing="true">
          <match url=".*" />
          <conditions>
            <add input="{HTTP_HOST}" pattern="^d-film.com.cn$" />
          </conditions>
          <action type="Redirect" url="http://www.d-film.com.cn/{R:0}" redirectType="Permanent" />
        </rule>
  </rules>
    </rewrite>
404
    <httpErrors errorMode="Custom" existingResponse="Auto" defaultResponseMode="ExecuteURL">
      <clear />
      <error statusCode="403" responseMode="Redirect" path="/error.htm?msg=2" />
      <error statusCode="404" responseMode="ExecuteURL" path="/404.html" />
      <error statusCode="500" responseMode="Redirect" path="/error.htm?msg=4" />
    </httpErrors>


手机适配全局文件
<%@ Application Language="C#" %>
<script RunAt="server">

    void Application_BeginRequest(object sender, EventArgs e)
    {
        //判断访问网站的客户端是PC还是手机
        string path = HttpContext.Current.Request.Url.Host;//获取域名
        string path2 = HttpContext.Current.Request.Path;//HttpContext.Current.Request.Url.PathAndQuery;
        string path3 = HttpContext.Current.Request.RawUrl;//获取真实的kehuanli.htm      
        string zhenspath = HttpContext.Current.Request.Url.PathAndQuery;//获取 完整url （协议名+域名+站点名+文件名+参数） 
        // Response.Write(Request.FilePath);//获取当前的真实路径

        string str_u = Request.ServerVariables["HTTP_USER_AGENT"];
        Regex b = new Regex(@"android.+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|symbian|treo|up\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino", RegexOptions.IgnoreCase | RegexOptions.Multiline);
        Regex v = new Regex(@"1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(di|rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-", RegexOptions.IgnoreCase | RegexOptions.Multiline);

            //判断域名是不是m.开头
            if (path.IndexOf("m.") == 0)
            {
                //包含.aspx、.htm、.html的请求才会被重写
                if (path3.ToLower().IndexOf("/sdadmin/") == -1 && (path3.ToLower().IndexOf(".htm") >= 0 || path3.ToLower().IndexOf(".aspx") >= 0 || path3.ToLower().IndexOf(".html") >= 0))
                {
                    HttpContext.Current.RewritePath("/mobile" + zhenspath, false);
                }
            }
            else
            {
                if (!(b.IsMatch(str_u) || v.IsMatch(str_u.Substring(0, 4))))
                {
                    
                }
                else
                {
                    //包含.aspx、.htm、.html的请求才会被重写
                    if (path3.ToLower().IndexOf("/sdadmin/") == -1 && (path3.ToLower().IndexOf(".htm") >= 0 || path3.ToLower().IndexOf(".aspx") >= 0 || path3.ToLower().IndexOf(".html") >= 0))
                    {
                        if (path3.Equals("/index.aspx"))
                            path3 = "/";
                        //将域名中的www.替换为m.，并重定向;注意：域名其他部分不能包含www.例如www.aawww.com
                        HttpContext.Current.Response.Redirect("http://" + path.Replace("www.", "m.") + path3);
                    }
                }
            }
       
    } 
    void Application_Start(object sender, EventArgs e)
    {
        //在应用程序启动时运行的代码
        //NSW.BLL.SystemNSW.DataInit();
        // 在应用程序启动时运行的代码
        // this.BeginRequest += new EventHandler(Global_BeginRequest);
    }

    void Application_End(object sender, EventArgs e)
    {
        //在应用程序关闭时运行的代码

    }

    void Application_Error(object sender, EventArgs e)
    {
        //在出现未处理的错误时运行的代码
        NSW.BLL.OError.SendError(Server.GetLastError());
    }

    void Session_Start(object sender, EventArgs e)
    {
        //在新会话启动时运行的代码

    }

    void Session_End(object sender, EventArgs e)
    {
        //在会话结束时运行的代码。 
        // 注意: 只有在 Web.config 文件中的 sessionstate 模式设置为
        // InProc 时，才会引发 Session_End 事件。如果会话模式 
        //设置为 StateServer 或 SQLServer，则不会引发该事件。

    }
</script>




webconfig屏蔽ip
   <rule name="Block SomeRobot" stopProcessing="true">
      <match url="(.*)" />
      <conditions logicalGrouping="MatchAny">
        <add input="{USER_AGENT}" pattern="SomeRobot" />
        <add input="{REMOTE_ADDR}" pattern="122.246.5.75" />
        <add input="{REMOTE_ADDR}" pattern="122.246.5.95" />
        <add input="{REMOTE_ADDR}" pattern="122.246.5.145" />
        <add input="{REMOTE_ADDR}" pattern="154.85.191.230" />
        <add input="{REMOTE_ADDR}" pattern="115.239.216.208" />
        <add input="{REMOTE_ADDR}" pattern="101.132.103.15" />
        <add input="{REMOTE_ADDR}" pattern="124.239.251.239" />
        <add input="{REMOTE_ADDR}" pattern="111.206.36.10" />
        <add input="{REMOTE_ADDR}" pattern="111.206.36.11" />
        <add input="{REMOTE_ADDR}" pattern="119.233.142.44" />
        <add input="{REMOTE_ADDR}" pattern="123.126.113.186" />
        <add input="{REMOTE_ADDR}" pattern="183.225.161.67" />
        <add input="{REMOTE_ADDR}" pattern="120.241.1.21" />
        <add input="{REMOTE_ADDR}" pattern="124.118.11.16" />
        <add input="{REMOTE_ADDR}" pattern="183.240.38.246" />
        <add input="{REMOTE_ADDR}" pattern="36.104.34.228" />
        <add input="{REMOTE_ADDR}" pattern="219.134.115.168" />

        <add input="{REMOTE_ADDR}" pattern="115\.239\.216\.[200-300]" />
        <add input="{REMOTE_ADDR}" pattern="122\.246\.5\.[0-200]" />
        <add input="{REMOTE_ADDR}" pattern="111\.206\.221\.[0-200]" />
        <add input="{REMOTE_ADDR}" pattern="115\.239\.212\.[0-200]" />
        <add input="{REMOTE_ADDR}" pattern="115\.239\.216\.[0-300]" />
        <add input="{REMOTE_ADDR}" pattern="211\.103\.82\.[0-200]" />

      </conditions>
      <action type="AbortRequest" />
    </rule>

pc跳手机（手机端）
function browserRedirect() {
    //获取浏览器上的url
    var k_url = window.location.href.toLowerCase();
    var m_url = window.location.pathname;
    m_url = m_url.substr(1, m_url.indexOf("/", 2) - 1);
    //判断域名是不是m.开头
    if (k_url.indexOf("www.") == 7) {
        //重定向到替换后的路径
        window.location.href = k_url.replace('www.','m.');
    }
}
$(function () {
    //获取浏览器上的url
    var k_url = window.location.href.toLowerCase();
    //判断是否是静态页
    if (k_url.indexOf(".html") > -1 && k_url.indexOf("/sitemap.html") == -1) {
        browserRedirect();
    }
});

pc跳手机（pc端）
function browserRedirect() {
    //获取浏览器上的url
    var k_url = window.location.href.toLowerCase();
    var m_url = window.location.pathname;
    m_url = m_url.substr(1, m_url.indexOf("/", 2) - 1);
    //判断域名是不是m.开头
    if (k_url.indexOf("m.") == 7) {
        k_url = k_url.replace("/" + m_url + "/", "/m" + m_url + "/");
        //重定向到替换后的路径
        window.location.href = k_url;
    } else {
        var sUserAgent = navigator.userAgent.toLowerCase();
        var bIsIpad = sUserAgent.match(/ipad/i) == "ipad";
        var bIsIphoneOs = sUserAgent.match(/iphone os/i) == "iphone os";
        var bIsMidp = sUserAgent.match(/midp/i) == "midp";
        var bIsUc7 = sUserAgent.match(/rv:1.2.3.4/i) == "rv:1.2.3.4";
        var bIsUc = sUserAgent.match(/ucweb/i) == "ucweb";
        var bIsAndroid = sUserAgent.match(/android/i) == "android";
        var bIsCE = sUserAgent.match(/windows ce/i) == "windows ce";
        var bIsWM = sUserAgent.match(/windows mobile/i) == "windows mobile";
        //判断是否是手机访问
        if (bIsIpad || bIsIphoneOs || bIsMidp || bIsUc7 || bIsUc || bIsAndroid || bIsCE || bIsWM) {
            k_url = k_url.replace("/" + m_url + "/", "/m" + m_url + "/");
            //将域名中的www.替换为m.，并重定向;注意：域名其他部分不能包含www.例如www.aawww.com
            window.location.href = k_url.replace("www.", "m.");
        }
    }
}
$(function () {
    //获取浏览器上的url
    var k_url = window.location.href.toLowerCase();
    //判断是否是静态页
    if (k_url.indexOf(".html") > -1 && k_url.indexOf("/sitemap.html") == -1) {
        browserRedirect();
    }
});
